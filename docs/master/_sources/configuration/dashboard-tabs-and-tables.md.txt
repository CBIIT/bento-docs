# Dashboard: Tabs and Tables

The dashboard is structured to organize the data tables using tabs beneath the widgets.

These tables can be configured to list key data entities in your data sharing platform along with a list of key data entity attributes. In the [Bento reference implementation](https://dev.bento-tools.org/#/cases) the Dashboard Table list the cases (or study subjects) in the program.

Dashboard Tab Configuration
Dashboard Tab configuration includes configuration for tabs (Cases, Samples and Files) and respective tables.
```
const tabContainers = [
  {
    name: 'Cases',
    count: 'numberOfSubjects',
    api: GET_CASES_OVERVIEW_QUERY,
    paginationAPIField: 'subjectOverview',
    dataKey: 'subject_id',
    defaultSortField: 'subject_id',
    defaultSortDirection: 'asc',
    buttonText: 'Add Selected Files',
    tableID: 'case_tab_table',
    extendedViewConfig: {
      pagination: true,
    },
    columns: [
      {
        cellType: cellTypes.CHECKBOX,
        display: true,
      },
      {
        dataField: 'subject_id',
        header: 'Case ID',
        cellType: cellTypes.LINK,
        linkAttr : {
          rootPath: '/case',
          pathParams: ['subject_id'],
        },
        display: true,
        tooltipText: 'sort',
      },
      {
        dataField: 'diagnosis',
        header: 'Diagnosis',
        display: true,
        tooltipText: 'sort',
        role: cellTypes.DISPLAY
      },
      ....
    ],
    id: 'case_tab',
    tableID: 'case_tab_table',
    tableMsg: {
      noMatch: 'No Matching Records Found',
    },
    addFilesRequestVariableKey: 'subject_ids',
    addFilesResponseKeys: ['fileIDsFromList'],
    addAllFilesResponseKeys: ['subjectOverview', 'files'],
    addAllFileQuery: GET_ALL_FILEIDS_FROM_CASESTAB_FOR_ADD_ALL_CART,
    addSelectedFilesQuery: GET_ALL_FILEIDS_CASESTAB_FOR_SELECT_ALL,
    ...
  },
  {
    name: 'Samples',
    ...
  },
  {
    name: 'Files',
    ...
  }
]
```

Tab Configuration:
- **`name`** : Text to show on tab
- **`count`**: count specific to the case, samples and files after filter action
  for bento frontend case tab, count = 'numberOfSubjects'. 'numberOfSubjects' is provided by DASHBOARD_QUERY_NEW query response

## Tables

The tables on each tab can be configured as follows:

1. Open `$(src)/bento-frontend/src/bento/dashboardTabData.js` 
2. The `tabContainers` object is an array of tables, with each table object having the following fields:

- **`dataField`** : field name in "Data" object to get values for table. 

  >  :point_right:   **NOTE**: This field should be in the GraphQL API query specified in the `api` field.

- **`defaultSortField`**: Value must be one of the 'dataField' in columns.

- **`defaultSortDirection`**: Sort default column in Ascending or Descending order (value must be `asc` or `desc`)

- **`columns`**: a list of column objects. There is a maximum limit of 10 columns. If more than 10 columns are added, Bento will display the first 10 columns without an error or warning message. The top-down order of columns will be displayed left to right on the UI.  Each column object  is described by the following fields:

  * `dataField`: specifies what data appears in the column, field must be from the GraphQL API query

  * `header`: Heading Text for column

  * `display`: Show  or Hide column 

    * must be `true`  or `false`

  * `cellType`: define column type based on role (Checkbox, links)

    * cellTypes.CHECKBOX (selecting rows), cellTypes.LINK (e.g. Case ID column), default value text


  * `linkAttr`: Hyperlink to internal or external page. The value can be injected in link dynamically using `{linkAttr}`, for example:

    ```javascript
    // Internal Link 
    linkAttr: {
      rootPath: '/case', //provide rootPath,
      pathParams: ['subject_id'], //provide array of pathparm (bento-core will dynamically create path based on the pathParams)
    }
    
    // External Link can be configured with custom element (cellTypes.CUSTOM_ELEM)
    ```
  * `id`: id for the table (required for test automation)

  * `tableID`: id for the table (required for test automation)

  * Set the field `tableMsg` to display empty table.

  * Set the field `dataKey` to track selected rows in the table (Note: select row feature required unique field to track selected rows).

  * `extendedViewConfig` provides option to add pagination, download button and manage column view component above header column.

      * set pagination to `true` for pagination

      * set manageViewColumns to `true` for manageViewColumns (set column `role` to cellTypes.DISPLAY)

      * set download to `true` to display download button

WrapperConfig:

  * Set the field `addFilesRequestVariableKey` field to add files to cart.

  * Set the field `addAllFileQuery` query to add all files to the cart.

  * Set the field `addAllFilesResponseKeys` to access the response data provided by addAllFileQuery.

  * Set the field `addSelectedFilesQuery` query to add selected files to the cart.

  * Set the field `addFilesResponseKeys` to access the response data provided by addSelectedFilesQuery.

  >  :warning: **WARNING**: You can add a maximum of **10** columns to the dashboard tab table. If you add more than 10 columns, Bento will display only the first ten columns, without any warning or error message



### GraphQL Query

The GraphQL Query used in the Dashboard page is defined in `DASHBOARD_QUERY`. For example:

```javascript
// GraphQL query to retrieve detailed info for a case
export const DASHBOARD_QUERY = gql`{
  numberOfPrograms
  numberOfStudies
  numberOfSubjects
  numberOfSamples
  numberOfLabProcedures
  numberOfFiles
  subjectCountByProgram{
        group
        subjects
      }
...
    fileOverview {
        file_id
        file_name
        association
        file_description
        file_format
        file_size
        program
        arm
        subject_id
        sample_id
        diagnosis
    }
  }`;
```


#### Suggested Best Practices

- Dimension of the External Link Icon = 16 X 16 pixels.
- All images should have a resolution >= 72 ppi and should be in the PNG format.

 